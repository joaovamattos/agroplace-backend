{
  "swagger": "2.0",
  "info": {
    "description": "Essa é a documentação da API que é hospedada nos servidores do Google Firebase.",
    "version": "1.0.0",
    "title": "Agroplace",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "agroplace.adm@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "agroplace.swagger.io",
  "basePath": "/api",
  "tags": [
    {
      "name": "produto",
      "description": "Operções de produto",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operações de usuários"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Criar usuário",
        "description": "Cria um novo usuário",
        "operationId": "signup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de criação de usuário",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "{ token }"
          },
          "400": {
            "description": "E-mail já cadastrado!"
          },
          "500": {
            "description": "Erro de servidor, tente novamente!"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Faz login no sistema",
        "description": "",
        "operationId": "login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login no sistema",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Login"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Erro ao tentar fazer login"
          },
          "403": {
            "description": "Usuário ou senha inválidos!"
          },
          "default": {
            "description": "{ token }"
          }
        }
      }
    },
    "/user/image": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Faz upload da imagem do usuário",
        "description": "",
        "operationId": "uploadImage",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "additionalMetadata",
            "in": "formData",
            "description": "Additional data to pass to server",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Operação realizacom com sucesso!"
          },
          "500": {
            "description": "Erro de servidor, tente novamente!"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Encerrar sessão",
        "description": "",
        "operationId": "logout",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operação realizacom com sucesso!"
          },
          "500": {
            "description": "Erro de servidor, tente novamente!"
          }
        }
      }
    },
    "/user/{username}": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    }
  }
}